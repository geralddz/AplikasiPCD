Index: app/src/main/java/com/app/trackingqrcode/socket/BaseSocket.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.trackingqrcode.socket\r\n\r\nimport android.util.Log\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.lifecycle.MutableLiveData\r\nimport com.app.trackingqrcode.response.DetailPlanResponse\r\nimport com.app.trackingqrcode.response.StationIdResponse\r\nimport com.app.trackingqrcode.response.StationResponse\r\nimport net.mrbin99.laravelechoandroid.Echo\r\nimport net.mrbin99.laravelechoandroid.EchoOptions\r\n\r\nval station = String\r\nconst val SERVER_URL = \"http://10.14.130.94:6001\"\r\nconst val CHANNEL_MESSAGES = \"dashboard\"\r\nconst val EVENT_MESSAGE_CREATED = \"Achievement_$\"\r\nconst val TAG = \"msg\"\r\n\r\nopen class BaseSocket : AppCompatActivity() {\r\n    private var _receivedEvent = MutableLiveData<DetailPlanResponse>()\r\n    var receivedEvent = _receivedEvent\r\n\r\n    private var echo: Echo? = null\r\n\r\n    fun connectToSocket() {\r\n        val options = EchoOptions()\r\n        options.host = SERVER_URL\r\n\r\n        echo = Echo(options)\r\n        echo?.connect({\r\n            log(\"successful connect\")\r\n            listenForEvents()\r\n        }\r\n        ) { args -> log(\"error while connecting: $args\") }\r\n    }\r\n\r\n    private fun listenForEvents() {\r\n        echo?.let {\r\n            it.channel(CHANNEL_MESSAGES)\r\n                .listen(EVENT_MESSAGE_CREATED) {\r\n                    val newEvent = ListenDataSocket.parseFrom(it)\r\n                    displayNewEvent(newEvent)\r\n                    Log.e(\"socket\", \"event: $newEvent\")\r\n\r\n                }\r\n        }\r\n    }\r\n\r\n    fun disconnectFromSocket() {\r\n        echo?.disconnect()\r\n    }\r\n\r\n    private fun log(message: String) {\r\n        Log.i(TAG, message)\r\n    }\r\n\r\n    private fun displayNewEvent(event: ListenDataSocket?) {\r\n        log(\"new event \" + event?.message)\r\n        _receivedEvent.postValue(DetailPlanResponse())\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/app/trackingqrcode/socket/BaseSocket.kt b/app/src/main/java/com/app/trackingqrcode/socket/BaseSocket.kt
--- a/app/src/main/java/com/app/trackingqrcode/socket/BaseSocket.kt	
+++ b/app/src/main/java/com/app/trackingqrcode/socket/BaseSocket.kt	
@@ -12,7 +12,7 @@
 val station = String
 const val SERVER_URL = "http://10.14.130.94:6001"
 const val CHANNEL_MESSAGES = "dashboard"
-const val EVENT_MESSAGE_CREATED = "Achievement_$"
+const val EVENT_MESSAGE_CREATED = "Achievement_1"
 const val TAG = "msg"
 
 open class BaseSocket : AppCompatActivity() {
@@ -21,17 +21,6 @@
 
     private var echo: Echo? = null
 
-    fun connectToSocket() {
-        val options = EchoOptions()
-        options.host = SERVER_URL
-
-        echo = Echo(options)
-        echo?.connect({
-            log("successful connect")
-            listenForEvents()
-        }
-        ) { args -> log("error while connecting: $args") }
-    }
 
     private fun listenForEvents() {
         echo?.let {
@@ -46,15 +35,14 @@
     }
 
     fun disconnectFromSocket() {
-        echo?.disconnect()
-    }
+        echo?.disconnect() }
 
     private fun log(message: String) {
         Log.i(TAG, message)
     }
 
     private fun displayNewEvent(event: ListenDataSocket?) {
-        log("new event " + event?.message)
+        log("new event " + event?.temp_update)
         _receivedEvent.postValue(DetailPlanResponse())
     }
 }
